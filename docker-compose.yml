version: "3.8"

services:
  db:
    image: "postgres:15.3-bookworm"
    env_file:
      - .env
    ports:
      - "${PGPORT}:${PGPORT}"
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB}"]
      interval: 10s
      timeout: 30s
      retries: 3
    volumes:
      - ./backend/data:/var/lib/postgresql/data
    profiles:
      - "dev"
      - "prod"
      - "ingestion"

  db-testing:
    image: "postgres:15.3-bookworm"
    env_file:
      - .env.testing
    ports:
      - "${PGPORT}:${PGPORT}"
    volumes:
      - ./backend/data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB}"]
      interval: 10s
      timeout: 30s
      retries: 3
    profiles:
      - "testing"

  backend-dev:
    build:
      context: ./backend
      dockerfile: ./docker/dev/Dockerfile
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend/src:/usr/local/app/src
      - ./backend/tsconfig.json:/usr/local/app/tsconfig.json
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    profiles:
      - "dev"

  backend-prod:
    build:
      context: ./backend
      dockerfile: ./docker/prod/Dockerfile
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    profiles:
      - "prod"

  ingestion:
    command: ["pnpm", "ts-node", "src/ingest.ts"]
    build:
      context: ./backend
      dockerfile: ./docker/dev/Dockerfile
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend/src:/usr/local/app/src
      - ./backend/tsconfig.json:/usr/local/app/tsconfig.json
    profiles:
      - "ingestion"

  backend-testing:
    command: ["pnpm", "jest", "--runInBand", "--verbose"]
    build:
      context: ./backend
      dockerfile: ./docker/dev/Dockerfile
    env_file:
      - .env.testing
    depends_on:
      db-testing:
        condition: service_healthy
    volumes:
      - ./backend/src:/usr/local/app/src
      - ./backend/tsconfig.json:/usr/local/app/tsconfig.json
      - ./backend/jest.config.js:/usr/local/app/jest.config.js
    tty: true
    profiles:
      - "testing"

  frontend-dev:
    init: true
    build:
      context: ./frontend/
      dockerfile: ./docker/dev/Dockerfile
    env_file:
      - .env
    volumes:
      - type: bind
        source: ./frontend
        target: /usr/local/app
      - type: volume
        target: /usr/local/app/node_modules
      - type: bind
        source: ./frontend/vite.config.ts
        target: /usr/local/app/vite.config.ts
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    profiles:
      - "dev"

  nginx-dev:
    image: "nginx:1.25.3-alpine-slim"
    depends_on:
      - frontend-dev
      - backend-dev
    env_file:
      - .env
    volumes:
      - ./nginx.dev.conf:/etc/nginx/nginx.conf
      - ./logs/nginx:/usr/log/
    ports:
      - "${NGINX_PORT}:80"
    profiles:
      - "dev"
